import '@mantine/core/styles.css'

import { type Metadata } from 'next'

import { TRPCReactProvider } from '~/trpc/react'
import { ColorSchemeScript, Loader } from '@mantine/core'
import { MantineProvider } from '~/app/_styles/MantineProvider'
import { I18nProvider } from '~/app/_providers/I18nProvider'
import { initTranslations, namespaces } from '~/app/i18n'
import { Navbar } from '~/app/_components/Navbar'
import { ReactQueryDevtools } from '@tanstack/react-query-devtools'
import { Analytics } from '@vercel/analytics/react'
import { SpeedInsights } from '@vercel/speed-insights/next'
import { Suspense } from 'react'

export const generateStaticParams = async () => ['en', 'es', 'fr'].map((locale) => ({ locale }))
export async function generateMetadata({ params }: RootLayoutProps): Promise<Metadata> {
	const { t } = await initTranslations(params.locale, namespaces)
	return {
		title: t('page-title.general'),
		// title: 'page-title.general',
		// description: 'Generated by create-t3-app',
		icons: [
			{ rel: 'apple-touch-icon', sizes: '180x180', url: '/apple-touch-icon.png' },
			{ rel: 'icon', type: 'image/png', sizes: '32x32', url: '/favicon-32x32.png' },
			{ rel: 'icon', type: 'image/png', sizes: '16x16', url: '/favicon-16x16.png' },
		],
	}
}
export default async function RootLayout({ children, params: { locale } }: RootLayoutProps) {
	const { resources } = await initTranslations(locale, namespaces)

	return (
		<html lang={locale}>
			<head>
				<ColorSchemeScript />
			</head>
			<body>
				<MantineProvider>
					<I18nProvider namespaces={namespaces} locale={locale} resources={resources}>
						<TRPCReactProvider>
							<Navbar />
							<Suspense fallback={<Loader />}>{children}</Suspense>
							<ReactQueryDevtools buttonPosition='bottom-left' />
						</TRPCReactProvider>
					</I18nProvider>
				</MantineProvider>
			</body>
			<Analytics />
			<SpeedInsights />
		</html>
	)
}

type RootLayoutProps = {
	children: React.ReactNode
	params: {
		locale: string
	}
}
